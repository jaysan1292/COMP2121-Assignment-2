/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Application.java
 *
 * Created on Mar 30, 2012, 12:14:46 PM
 */
package com.assign2.view;

import com.assign2.Utils;
import com.assign2.data.CustomerAccess;
import com.assign2.business.Customer;
import com.assign2.business.Item;
import com.assign2.business.Order;
import com.assign2.data.ItemAccess;
import com.assign2.data.OrderAccess;
import com.assign2.data.OrderLineAccess;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JApplet;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jason Recillo
 */
public class Application extends JApplet {
    /**
     * This applet can be run as an application!
     * If run in a browser, the main method will be ignored,
     * whereas if run as an executable, the main method will execute.
     * @param args 
     */
    public static void main(String[] args) {
        JApplet applet = new Application();
        applet.init();
        applet.start();

        JFrame window = new JFrame("BTB Computer Hardware");
        window.setContentPane(applet);
        window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        window.pack();
        window.setLocationRelativeTo(null);
        window.setVisible(true);
    }

    //<editor-fold defaultstate="collapsed" desc="Applet Methods">
    /** Initializes the applet Application */
    @Override
    public void init() {
        //<editor-fold defaultstate="collapsed" desc="Set Windows look and feel">
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //<editor-fold defaultstate="collapsed" desc="Create and display the applet">
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                    clearStatusBarText();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        //</editor-fold>
    }
    //</editor-fold>

    public void setStatusBarText(String text) {
        lblStatusBarText.setText(String.format("  %s", text));
    }

    public void clearStatusBarText() {
        setStatusBarText("");
    }

    public void setProgressBarEnabled(boolean enabled) {
        if (enabled) {
            prgProgressBar.setEnabled(true);
            prgProgressBar.setIndeterminate(true);
        } else {
            prgProgressBar.setEnabled(false);
            prgProgressBar.setIndeterminate(false);
        }
    }

    //<editor-fold defaultstate="collapsed" desc="Generated Code">
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings ("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        barStatusBar = new javax.swing.JPanel();
        lblStatusBarText = new javax.swing.JLabel();
        prgProgressBar = new javax.swing.JProgressBar();
        tabTabbedPane = new javax.swing.JTabbedPane();
        frmWelcome = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        frmCustomer = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCustomerList = new javax.swing.JTable();
        btnLoadCustomers = new javax.swing.JButton();
        btnAddNewCustomer = new javax.swing.JButton();
        lblCustomerSearchLabel = new javax.swing.JLabel();
        txtCustomerSearch = new javax.swing.JTextField();
        frmItem = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblItemList = new javax.swing.JTable();
        btnLoadItems = new javax.swing.JButton();
        btnAddNewItem = new javax.swing.JButton();
        txtItemSearchLabel = new javax.swing.JTextField();
        lblItemSearchLabel = new javax.swing.JLabel();
        frmOrders = new javax.swing.JPanel();
        btnLoadOrders = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblOrderList = new javax.swing.JTable();
        btnAddNewOrder = new javax.swing.JButton();
        mnuMainMenu = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        itmNewCustomer = new javax.swing.JMenuItem();
        itmExit = new javax.swing.JMenuItem();
        mnuView = new javax.swing.JMenu();
        mnuFont = new javax.swing.JMenu();
        itmDefault = new javax.swing.JMenuItem();
        itmSegoeUI = new javax.swing.JMenuItem();
        itmLucida = new javax.swing.JMenuItem();

        jLabel2.setText("jLabel2");

        setBackground(new java.awt.Color(240, 240, 240));
        setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        barStatusBar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        barStatusBar.setMaximumSize(new java.awt.Dimension(32767, 22));
        barStatusBar.setPreferredSize(new java.awt.Dimension(595, 22));

        lblStatusBarText.setFont(getFont());
        lblStatusBarText.setText("  placeholder label");
        lblStatusBarText.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout barStatusBarLayout = new javax.swing.GroupLayout(barStatusBar);
        barStatusBar.setLayout(barStatusBarLayout);
        barStatusBarLayout.setHorizontalGroup(
            barStatusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, barStatusBarLayout.createSequentialGroup()
                .addComponent(lblStatusBarText, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                .addGap(38, 38, 38)
                .addComponent(prgProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        barStatusBarLayout.setVerticalGroup(
            barStatusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(barStatusBarLayout.createSequentialGroup()
                .addGroup(barStatusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(prgProgressBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 16, Short.MAX_VALUE)
                    .addComponent(lblStatusBarText))
                .addContainerGap())
        );

        getContentPane().add(barStatusBar, java.awt.BorderLayout.SOUTH);

        tabTabbedPane.setPreferredSize(new java.awt.Dimension(667, 410));

        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/assign2/view/logo.png"))); // NOI18N
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel1.add(jLabel1, java.awt.BorderLayout.CENTER);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Jason Recillo - 100726948");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Peter Le - 100714258");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("COMP 2121 - Internet Application Development");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("John Jess Migia - 100713187");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Submitted to: Anjana Shah");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addContainerGap(388, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_END);

        javax.swing.GroupLayout frmWelcomeLayout = new javax.swing.GroupLayout(frmWelcome);
        frmWelcome.setLayout(frmWelcomeLayout);
        frmWelcomeLayout.setHorizontalGroup(
            frmWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmWelcomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
                .addContainerGap())
        );
        frmWelcomeLayout.setVerticalGroup(
            frmWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmWelcomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabTabbedPane.addTab("Welcome", frmWelcome);

        tblCustomerList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "First Name", "Last Name", "Address", "Phone Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCustomerList);
        tblCustomerList.getColumnModel().getColumn(0).setResizable(false);
        tblCustomerList.getColumnModel().getColumn(0).setPreferredWidth(32);
        tblCustomerList.getColumnModel().getColumn(1).setResizable(false);
        tblCustomerList.getColumnModel().getColumn(1).setPreferredWidth(72);
        tblCustomerList.getColumnModel().getColumn(2).setResizable(false);
        tblCustomerList.getColumnModel().getColumn(2).setPreferredWidth(88);
        tblCustomerList.getColumnModel().getColumn(3).setResizable(false);
        tblCustomerList.getColumnModel().getColumn(3).setPreferredWidth(261);
        tblCustomerList.getColumnModel().getColumn(4).setResizable(false);
        tblCustomerList.getColumnModel().getColumn(4).setPreferredWidth(87);

        btnLoadCustomers.setText("Load Customers");
        btnLoadCustomers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadCustomersActionPerformed(evt);
            }
        });

        btnAddNewCustomer.setText("Add New Customer");
        btnAddNewCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewCustomerActionPerformed(evt);
            }
        });

        lblCustomerSearchLabel.setText("Search:");

        txtCustomerSearch.setText("Search...");

        javax.swing.GroupLayout frmCustomerLayout = new javax.swing.GroupLayout(frmCustomer);
        frmCustomer.setLayout(frmCustomerLayout);
        frmCustomerLayout.setHorizontalGroup(
            frmCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frmCustomerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frmCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, frmCustomerLayout.createSequentialGroup()
                        .addComponent(btnLoadCustomers)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddNewCustomer)
                        .addGap(134, 134, 134)
                        .addComponent(lblCustomerSearchLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCustomerSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)))
                .addContainerGap())
        );
        frmCustomerLayout.setVerticalGroup(
            frmCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmCustomerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frmCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLoadCustomers)
                    .addComponent(btnAddNewCustomer)
                    .addComponent(lblCustomerSearchLabel)
                    .addComponent(txtCustomerSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabTabbedPane.addTab("Customer", frmCustomer);

        tblItemList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Category", "Price", "Description", "Image", "Qty"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblItemList);
        tblItemList.getColumnModel().getColumn(0).setResizable(false);
        tblItemList.getColumnModel().getColumn(0).setPreferredWidth(26);
        tblItemList.getColumnModel().getColumn(1).setResizable(false);
        tblItemList.getColumnModel().getColumn(1).setPreferredWidth(124);
        tblItemList.getColumnModel().getColumn(2).setResizable(false);
        tblItemList.getColumnModel().getColumn(2).setPreferredWidth(87);
        tblItemList.getColumnModel().getColumn(3).setResizable(false);
        tblItemList.getColumnModel().getColumn(3).setPreferredWidth(49);
        tblItemList.getColumnModel().getColumn(4).setResizable(false);
        tblItemList.getColumnModel().getColumn(4).setPreferredWidth(100);
        tblItemList.getColumnModel().getColumn(5).setResizable(false);
        tblItemList.getColumnModel().getColumn(5).setPreferredWidth(100);
        tblItemList.getColumnModel().getColumn(6).setResizable(false);
        tblItemList.getColumnModel().getColumn(6).setPreferredWidth(54);

        btnLoadItems.setText("Load Items");
        btnLoadItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadItemsActionPerformed(evt);
            }
        });

        btnAddNewItem.setText("Add New Item");
        btnAddNewItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewItemActionPerformed(evt);
            }
        });

        txtItemSearchLabel.setText("Search...");

        lblItemSearchLabel.setText("Search:");

        javax.swing.GroupLayout frmItemLayout = new javax.swing.GroupLayout(frmItem);
        frmItem.setLayout(frmItemLayout);
        frmItemLayout.setHorizontalGroup(
            frmItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frmItemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frmItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, frmItemLayout.createSequentialGroup()
                        .addComponent(btnLoadItems)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddNewItem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 182, Short.MAX_VALUE)
                        .addComponent(lblItemSearchLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtItemSearchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        frmItemLayout.setVerticalGroup(
            frmItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmItemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frmItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLoadItems)
                    .addComponent(btnAddNewItem)
                    .addComponent(txtItemSearchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblItemSearchLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabTabbedPane.addTab("Products", frmItem);

        btnLoadOrders.setText("Load Orders");
        btnLoadOrders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadOrdersActionPerformed(evt);
            }
        });

        tblOrderList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Customer Name", "Order Date", "Number of Items"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblOrderList);
        tblOrderList.getColumnModel().getColumn(0).setResizable(false);
        tblOrderList.getColumnModel().getColumn(0).setPreferredWidth(63);
        tblOrderList.getColumnModel().getColumn(1).setResizable(false);
        tblOrderList.getColumnModel().getColumn(1).setPreferredWidth(190);
        tblOrderList.getColumnModel().getColumn(2).setResizable(false);
        tblOrderList.getColumnModel().getColumn(2).setPreferredWidth(193);
        tblOrderList.getColumnModel().getColumn(3).setResizable(false);
        tblOrderList.getColumnModel().getColumn(3).setPreferredWidth(193);

        btnAddNewOrder.setText("Add New Order");
        btnAddNewOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout frmOrdersLayout = new javax.swing.GroupLayout(frmOrders);
        frmOrders.setLayout(frmOrdersLayout);
        frmOrdersLayout.setHorizontalGroup(
            frmOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frmOrdersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frmOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, frmOrdersLayout.createSequentialGroup()
                        .addComponent(btnLoadOrders)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddNewOrder)))
                .addContainerGap())
        );
        frmOrdersLayout.setVerticalGroup(
            frmOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmOrdersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frmOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLoadOrders)
                    .addComponent(btnAddNewOrder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabTabbedPane.addTab("Orders", frmOrders);

        getContentPane().add(tabTabbedPane, java.awt.BorderLayout.CENTER);

        mnuFile.setMnemonic('f');
        mnuFile.setText("File");

        itmNewCustomer.setMnemonic('u');
        itmNewCustomer.setText("New Customer");
        itmNewCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmNewCustomerActionPerformed(evt);
            }
        });
        mnuFile.add(itmNewCustomer);

        itmExit.setMnemonic('x');
        itmExit.setText("Exit");
        itmExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                itmExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                itmExitMouseExited(evt);
            }
        });
        itmExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmExitActionPerformed(evt);
            }
        });
        mnuFile.add(itmExit);

        mnuMainMenu.add(mnuFile);

        mnuView.setMnemonic('v');
        mnuView.setText("View");

        mnuFont.setText("Change Font");
        mnuFont.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mnuFontMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mnuFontMouseExited(evt);
            }
        });

        itmDefault.setText("Default");
        mnuFont.add(itmDefault);

        itmSegoeUI.setText("Segoe UI");
        mnuFont.add(itmSegoeUI);

        itmLucida.setText("Lucida Grande");
        mnuFont.add(itmLucida);

        mnuView.add(mnuFont);

        mnuMainMenu.add(mnuView);

        setJMenuBar(mnuMainMenu);
    }// </editor-fold>//GEN-END:initComponents
    //</editor-fold>
    //<editor-fold defaultstate="collapsed" desc="Event Handlers">

    private void mnuFontMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuFontMouseEntered
        setStatusBarText("Changes the current font.");
    }//GEN-LAST:event_mnuFontMouseEntered

    private void mnuFontMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuFontMouseExited
        clearStatusBarText();
    }//GEN-LAST:event_mnuFontMouseExited

    private void itmExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itmExitMouseEntered
        setStatusBarText("Exits the application.");
    }//GEN-LAST:event_itmExitMouseEntered

    private void itmExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itmExitMouseExited
        clearStatusBarText();
    }//GEN-LAST:event_itmExitMouseExited

    private void itmNewCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmNewCustomerActionPerformed
        //
    }//GEN-LAST:event_itmNewCustomerActionPerformed

    private void itmExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_itmExitActionPerformed

    private void btnLoadCustomersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadCustomersActionPerformed
        Thread loadCustomerThread = new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    DefaultTableModel model = (DefaultTableModel) tblCustomerList.getModel();
                    model.setRowCount(0);

                    setStatusBarText("Retrieving customers from database...");
                    setProgressBarEnabled(false);
                    Utils.log_info("Retrieving customers from database...");
                    Customer[] list = CustomerAccess.getCustomers();
                    for (Customer c : list) {
                        ArrayList<Object> cust = new ArrayList<Object>();
                        cust.add(c.getCustomerId());
                        cust.add(c.getFirstName());
                        cust.add(c.getLastName());
                        cust.add(c.getAddress());
                        cust.add(Utils.formatPhoneNumber(c));
                        //add customers to table here
                        model.addRow(cust.toArray());
                    }
                    setStatusBarText("Done.");
                    setProgressBarEnabled(false);
                    Utils.log_info("Done loading customers.");
                } catch (SQLException ex) {
                    Utils.log_error(ex.getMessage());
                }
            }
        }, "RetrieveCustomers");
        loadCustomerThread.start();
    }//GEN-LAST:event_btnLoadCustomersActionPerformed

    private void btnLoadItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadItemsActionPerformed
        Thread thread = new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    DefaultTableModel model = (DefaultTableModel) tblItemList.getModel();
                    model.setRowCount(0);

                    setStatusBarText("Retrieving items from database...");
                    setProgressBarEnabled(true);
                    Utils.log_info("Retrieving items from database...");
                    Item[] list = ItemAccess.getItems();
                    for (Item i : list) {
                        ArrayList<Object> items = new ArrayList<Object>();
                        items.add(i.getItemId());
                        items.add(i.getName());
                        items.add(i.getCategory().getCategoryName());
                        items.add(i.getPrice());
                        items.add(i.getDescription() == null ? "no description" : i.getDescription());
                        items.add(i.getImage() == null ? "no image" : "<binary data>");
                        items.add(i.getQtyInStock());
                        //add items to table here
                        model.addRow(items.toArray());
                    }
                    setStatusBarText("Done.");
                    setProgressBarEnabled(false);
                    Utils.log_info("Done loading items.");
                } catch (SQLException ex) {
                    Utils.log_error(ex.getMessage());
                }
            }
        }, "RetrieveItems");
        thread.start();
    }//GEN-LAST:event_btnLoadItemsActionPerformed

    private void btnLoadOrdersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadOrdersActionPerformed
        Thread thread = new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    DefaultTableModel model = (DefaultTableModel) tblOrderList.getModel();
                    model.setRowCount(0);

                    setStatusBarText("Retrieving orders from database...");
                    setProgressBarEnabled(true);
                    Utils.log_info("Retrieving orders from database...");
                    Order[] list = OrderAccess.getOrders();
                    for (Order o : list) {
                        ArrayList<Object> orders = new ArrayList<Object>();
                        orders.add(o.getOrderId());
                        orders.add(String.format("%s %s", o.getCustomer().getFirstName(), o.getCustomer().getLastName()));
                        orders.add(o.getDate());
                        orders.add(OrderLineAccess.getOrderLines(o).length);
                        model.addRow(orders.toArray());
                    }
                    setStatusBarText("Done.");
                    setProgressBarEnabled(false);
                    Utils.log_info("Done loading orders.");
                } catch (SQLException ex) {
                    Utils.log_error(ex.getMessage());
                }
            }
        }, "RetrieveOrders");
        thread.start();
    }//GEN-LAST:event_btnLoadOrdersActionPerformed

    private void btnAddNewItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewItemActionPerformed
        JFrame frame = new JFrame("New Item");
        frame.setContentPane(new ItemForm());
        frame.setSize(frame.getContentPane().getPreferredSize());
        frame.setResizable(false);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
    }//GEN-LAST:event_btnAddNewItemActionPerformed

    private void btnAddNewCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewCustomerActionPerformed
        JFrame frame = new JFrame("New Customer");
        frame.setContentPane(new CustomerForm());
        frame.setSize(frame.getContentPane().getPreferredSize());
        frame.setResizable(false);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
    }//GEN-LAST:event_btnAddNewCustomerActionPerformed

    private void btnAddNewOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewOrderActionPerformed
        JFrame frame = new JFrame("New Order");
        frame.setContentPane(new OrderForm());
        frame.setSize(frame.getContentPane().getPreferredSize());
        frame.setResizable(false);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
    }//GEN-LAST:event_btnAddNewOrderActionPerformed
    //</editor-fold>
    //<editor-fold defaultstate="collapsed" desc="Generated Code">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel barStatusBar;
    private javax.swing.JButton btnAddNewCustomer;
    private javax.swing.JButton btnAddNewItem;
    private javax.swing.JButton btnAddNewOrder;
    private javax.swing.JButton btnLoadCustomers;
    private javax.swing.JButton btnLoadItems;
    private javax.swing.JButton btnLoadOrders;
    private javax.swing.JPanel frmCustomer;
    private javax.swing.JPanel frmItem;
    private javax.swing.JPanel frmOrders;
    private javax.swing.JPanel frmWelcome;
    private javax.swing.JMenuItem itmDefault;
    private javax.swing.JMenuItem itmExit;
    private javax.swing.JMenuItem itmLucida;
    private javax.swing.JMenuItem itmNewCustomer;
    private javax.swing.JMenuItem itmSegoeUI;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCustomerSearchLabel;
    private javax.swing.JLabel lblItemSearchLabel;
    private javax.swing.JLabel lblStatusBarText;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenu mnuFont;
    private javax.swing.JMenuBar mnuMainMenu;
    private javax.swing.JMenu mnuView;
    private javax.swing.JProgressBar prgProgressBar;
    private javax.swing.JTabbedPane tabTabbedPane;
    private javax.swing.JTable tblCustomerList;
    private javax.swing.JTable tblItemList;
    private javax.swing.JTable tblOrderList;
    private javax.swing.JTextField txtCustomerSearch;
    private javax.swing.JTextField txtItemSearchLabel;
    // End of variables declaration//GEN-END:variables
    //</editor-fold>
}
